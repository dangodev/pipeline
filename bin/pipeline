#!/usr/bin/env bash

###############################
# Settings / Utilities        #
###############################

# Emojis

B0='\342\226\221' # empty box
B1='\342\226\223' # solid box

# Text

BLUE='\e[34m'
BOLD='\e[1m'
CYAN='\e[36m'
DIM='\e[2m'
GREEN='\e[32m'
RED='\e[31m'
RESETALL='\e[0m'
UNCOLOR='\e[39m'
YELLOW='\e[33m'

CLEARLINE='                    ' # clears out widest commmand (add spaces if characters persist)

# https://github.com/thoughtbot/laptop
append_to_zshrc() {
	local text="$1" zshrc
	local skip_new_line="${2:-0}"

	if [ -w "$HOME/.zshrc.local" ]; then
		zshrc="$HOME/.zshrc.local"
	else
		zshrc="$HOME/.zshrc"
	fi

	if ! grep -Fqs "$text" "$zshrc"; then
		if [ "$skip_new_line" -eq 1 ]; then
			printf "%s\\n" "$text" >> "$zshrc"
		else
			printf "\\n%s\\n" "$text" >> "$zshrc"
		fi
	fi
}

zsh_plugin() {
	if ! grep "^plugins=.*$1[)|\s]" $HOME/.zshrc >/dev/null; then
		echo "yes"
		sed -i '' "s/^plugins=\([^)]*\)/plugins=\1 $1/" $HOME/.zshrc
	fi
}

zsh_custom_plugin() {
	ZSH_CUSTOM="${ZSH_CUSTOM:-$HOME/.oh-my-zsh/custom}"
	if [ ! -d "${ZSH_CUSTOM}/plugins/$1" ]; then
		zsh_plugin $1
		git clone --depth=1 "https://github.com/$2/$1.git" "${ZSH_CUSTOM}/plugins/$1" >/dev/null
	fi
}

###############################
# Install                     #
###############################

printf "${OCEAN} ${CYAN}${BOLD}Welcome to Pipeline!${RESETALL}\n"
printf "${SURFER} Dropping in…\n"

START_TIME=$SECONDS

# 1. Xcode
printf "[1/8] 🛠️ Installing XCode [${B1}${B0}${B0}${B0}${B0}${B0}${B0}${B0}] "
if xcode-select --version >/dev/null; then
	printf "\r[1/8] 🛠️ Xcode: ${DIM}already installed${RESETALL}${CLEARLINE}\n"
else
	xcode-select --install >/dev/null
	printf "\r[1/8] 🛠️ Xcode: ${GREEN}✔︎ installed${RESETALL}${CLEARLINE}\n"
fi

# 2. Homebrew
NONINTERACTIVE=1
printf "[2/8] 🍺 Installing Homebrew [${B1}${B1}${B0}${B0}${B0}${B0}${B0}${B0}]"
if command -v brew >/dev/null; then
	printf "\r[2/8] 🍺 Homebrew: ${DIM}already installed${RESETALL}${CLEARLINE}\n"
else
	/bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
	export PATH="/usr/local/bin:$PATH"
	source ~/.zshrc # reload
	printf "\r[2/8] 🍺 Homebrew: ${GREEN}✔︎ installed${RESETALL}${CLEARLINE}\n"
fi

# 3. Git via Homebrew
printf "[3/8] 🎋 Installing Git [${B1}${B1}${B1}${B0}${B0}${B0}${B0}${B0}]"
if brew ls --versions git >/dev/null; then
	printf "\r[3/8] 🎋 Git: ${DIM}already installed${RESETALL}${CLEARLINE}\n"
else
	brew install git >/dev/null
	printf "\r[3/8] 🎋 Git: ${GREEN}✔︎ installed${RESETALL}${CLEARLINE}\n"
fi

# 4. fnm
printf "[4/8] 🦖 Installing fnm [${B1}${B1}${B1}${B1}${B0}${B0}${B0}${B0}]"
append_to_zshrc '# fnm'
append_to_zshrc 'eval "$(fnm env --use-on-cd)"' 1
if command -v fnm >/dev/null; then
	printf "\r[4/8] 🦖 fnm: ${DIM}already installed${RESETALL}${CLEARLINE}\n"
else
	brew install fnm >/dev/null
	printf "\r[4/8] 🦖 fnm: ${GREEN}✔︎ installed${RESETALL}${CLEARLINE}\n"
fi

# 5 pnpm
if pnpm --version >/dev/null; then
	printf "\r[5/8] 🚚 pnpm: ${DIM}already installed${RESETALL}${CLEARLINE}\n"
else
	curl -fsSL https://get.pnpm.io/install.sh | sh -
	printf "\r[5/8] 🚚 pnpm: ${GREEN}✔︎ installed${RESETALL}${CLEARLINE}\n"
fi

# 6. Oh My Zsh
printf "[6/8] ⚡ Installing Oh My Zsh [${B1}${B1}${B1}${B1}${B1}${B1}${B0}${B0}]"
touch $HOME/.hushlogin # Silence “Last login” message

if [ -f $HOME/.oh-my-zsh/oh-my-zsh.sh ]; then
	printf "\r[6/8] ⚡ Oh My Zsh: ${DIM}already installed${RESETALL}${CLEARLINE}\n"
else
	export RUNZSH='no' # prevent Oh My Zsh from interrupting this script
	sh -c "$(curl -fsSL https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh)" >/dev/null
	printf "\r[6/8] ⚡ Oh My Zsh: ${GREEN}✔︎ installed${RESETALL}${CLEARLINE}\n"
fi

# 7. Zsh Plugins
printf "[7/8] 🧩 Installing Zsh Plugins [${B1}${B1}${B1}${B1}${B1}${B1}${B1}${B0}] "
zsh_plugin 'brew'
zsh_custom_plugin 'fast-syntax-highlighting' 'zdharma-continuum'
zsh_plugin 'z'
zsh_custom_plugin 'zsh-autosuggestions' 'zsh-users'
zsh_custom_plugin 'zsh-syntax-highlighting' 'zsh-users'
zsh_custom_plugin 'zsh-autocomplete' 'marlonrichert'
printf "\r[7/8] 🧩 Plugins: ${GREEN}✔︎ installed${RESETALL}${CLEARLINE}\n"


# 8. powerlevel10k theme (leave till last, because interactive install kicks in)
printf "[8/8] 🎨 Installing Theme [${B1}${B1}${B1}${B1}${B1}${B1}${B1}${B1}]"
sed -i '' 's/^ZSH_THEME=.*/ZSH_THEME="powerlevel10k\/powerlevel10k"/' $HOME/.zshrc
# 8c. If no theme file, install
if [ -d "${ZSH_CUSTOM:-$HOME/.oh-my-zsh/custom}/themes/powerlevel10k" ]; then
	printf "\r[8/8] 🎨 Theme: ${DIM}already installed${RESETALL}${CLEARLINE}\n"
else
	git clone --depth=1 https://github.com/romkatv/powerlevel10k.git ${ZSH_CUSTOM:-$HOME/.oh-my-zsh/custom}/themes/powerlevel10k
	printf "\r[8/8] 🎨 Theme: ${GREEN}✔︎ installed${RESETALL}${CLEARLINE}\n"
	printf "         Setting up powerlevel10k..."
fi

# Finish (and aliases)
append_to_zshrc '# Aliases'
append_to_zshrc "alias gcb='git checkout -b '" 1
append_to_zshrc "alias gcm='git checkout main'" 1
append_to_zshrc "alias gf='git fetch'" 1
append_to_zshrc "alias gl='git pull --rebase'" 1
append_to_zshrc "alias gpf='git push --force --force-with-lease'" 1
append_to_zshrc "alias gpo='git remote prune origin'" 1
append_to_zshrc "alias grc='git rebase --continue'" 1
append_to_zshrc "alias grh='git reset --hard HEAD'" 1
append_to_zshrc "alias grm='git rebase -i origin/main'" 1
append_to_zshrc "alias grs='git rebase --skip'" 1
append_to_zshrc "alias gs='git status'" 1
ELAPSED_TIME=$(($SECONDS - $START_TIME))
printf "${GREEN}${BOLD}✔︎ Done${RESETALL} in $(($ELAPSED_TIME))s.\n"
printf "\nHappy surfing!\n"
source ~/.zshrc # reload
