#!/usr/bin/env bash

###############################
# Settings / Utilities        #
###############################

# Emojis

B0='\342\226\221' # empty box
B1='\342\226\223' # solid box
BEERS='\360\237\215\273'
CHECK='\342\234\223'
MAGNIFYING_GLASS='\360\237\224\215'
NAILS='\360\237\222\205'
OCEAN='\360\237\214\212'
REFRESH='\360\237\224\204'
ROBOT='\360\237\244\226'
SPARKLES='\342\234\250'
SURFER='\360\237\217\204'
TOOLBOX='\360\237\247\260 ' # needs space
TREX='\360\237\246\226 ' # needs space
WRENCH='\360\237\224\247'

# Text

BLUE='\e[34m'
BOLD='\e[1m'
CYAN='\e[36m'
DIM='\e[2m'
GREEN='\e[32m'
RED='\e[31m'
RESETALL='\e[0m'
UNCOLOR='\e[39m'
YELLOW='\e[33m'

CLEARLINE='                    ' # clears out widest commmand (add spaces if characters persist)

# https://github.com/thoughtbot/laptop
append_to_zshrc() {
  local text="$1" zshrc
  local skip_new_line="${2:-0}"

  if [ -w "$HOME/.zshrc.local" ]; then
    zshrc="$HOME/.zshrc.local"
  else
    zshrc="$HOME/.zshrc"
  fi

  if ! grep -Fqs "$text" "$zshrc"; then
    if [ "$skip_new_line" -eq 1 ]; then
      printf "%s\\n" "$text" >> "$zshrc"
    else
      printf "\\n%s\\n" "$text" >> "$zshrc"
    fi
  fi
}

zsh_plugin() {
  if ! grep "^plugins=.*$1[)|\s]" $HOME/.zshrc >/dev/null; then
    echo "yes"
    sed -i '' "s/^plugins=\([^)]*\)/plugins=\1 $1/" $HOME/.zshrc
  fi
}

zsh_custom_plugin() {
  ZSH_CUSTOM="${ZSH_CUSTOM:-$HOME/.oh-my-zsh/custom}"
  if [ ! -d "${ZSH_CUSTOM}/plugins/$1" ]; then
    zsh_plugin $1
    git clone "https://github.com/zsh-users/$1.git" "${ZSH_CUSTOM}/plugins/$1" >/dev/null
  fi
}

###############################
# Install                     #
###############################

printf "${OCEAN} ${CYAN}${BOLD}Welcome to Pipeline!${RESETALL}\n"
printf "${SURFER} Dropping in…\n"

START_TIME=$SECONDS

# 1. Xcode
printf "[1/7] ${WRENCH} Installing XCode [${B1}${B0}${B0}${B0}${B0}${B0}${B0}${B0}] "
if type xcode-select >&- && xpath=$( xcode-select --print-path ) &&
	test -d "${xpath}" && test -x "${xpath}" ; then
	printf "\r[1/7] ${WRENCH} Xcode: ${DIM}already installed${RESETALL}${CLEARLINE}\n"
else
	xcode-select --install >/dev/null
	printf "\r[1/7] ${WRENCH} Xcode: ${GREEN}${CHECK} installed${RESETALL}${CLEARLINE}\n"
fi

# 2. Oh My Zsh
printf "[2/7] ${TOOLBOX} Installing Oh My Zsh [${B1}${B1}${B0}${B0}${B0}${B0}${B0}${B0}]"
touch $HOME/.hushlogin # Silence “Last login” message
zsh_plugin 'node' # Enable node plugin
zsh_plugin 'z' # Enable z plugin
if [ -f $HOME/.oh-my-zsh/oh-my-zsh.sh ]; then
	printf "\r[2/7] ${TOOLBOX} Oh My Zsh: ${DIM}already installed${RESETALL}${CLEARLINE}\n"
else
  export RUNZSH='no' # prevent Oh My Zsh from interrupting this script
  sh -c "$(curl -fsSL https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh)" >/dev/null
	printf "\r[2/7] ${TOOLBOX} Oh My Zsh: ${GREEN}${CHECK} installed${RESETALL}${CLEARLINE}\n"
fi
append_to_zshrc '# Default User'
append_to_zshrc 'DEFAULT_USER=$USER' 1

# 3. Bullet-train theme
printf "[3/7] ${NAILS} Installing Theme [${B1}${B1}${B1}${B0}${B0}${B0}${B0}${B0}]"

# 3a. If no Perplexed, install
if [ ! -f $HOME/Library/Fonts/Perplexed-Normal.otf ]; then
  curl -o $HOME/Library/Fonts/Perplexed-Normal.otf https://raw.githubusercontent.com/phoikoi/perplexed/master/Perplexed-Normal.otf >/dev/null
fi

# 3b. Reset theme to Bullet-train and add settings (in case user wanted to reset)
sed -i '' 's/^ZSH_THEME=.*/ZSH_THEME="bullet-train"/' $HOME/.zshrc

# 3c. If no theme file, install
if [ -f "${ZSH_CUSTOM:-$HOME/.oh-my-zsh/custom}/themes/bullet-train.zsh-theme" ]; then
	printf "\r[3/7] ${NAILS} Theme: ${DIM}already installed${RESETALL}${CLEARLINE}\n"
else
  curl -o "${ZSH_CUSTOM:-$HOME/.oh-my-zsh/custom}/themes/bullet-train.zsh-theme" https://raw.githubusercontent.com/caiogondim/bullet-train.zsh/master/bullet-train.zsh-theme >/dev/null
  # Add Bullet Train variables BEFORE ZSH_THEME to take effect
  sed -i '' 's/^ZSH_THEME=.*/# Bullet Train Settings (must come before ZSH_THEME)\
prompt_emoji() {\
  prompt_segment black white "✨"\
}\
BULLETTRAIN_PROMPT_ORDER=(emoji status dir nvm git)\
BULLETTRAIN_PROMPT_ADD_NEWLINE=false\
BULLETTRAIN_PROMPT_SEPARATE_LINE=false\
BULLETTRAIN_PROMPT_CHAR=""\
BULLETTRAIN_DIR_BG=magenta\
BULLETTRAIN_DIR_FG=black\
BULLETTRAIN_GIT_BG=green\
BULLETTRAIN_GIT_COLORIZE_DIRTY=true\
BULLETTRAIN_GIT_EXTENDED=false\
BULLETTRAIN_GIT_FG=black\
BULLETTRAIN_NVM_BG=black\
BULLETTRAIN_NVM_FG=green\
BULLETTRAIN_NVM_SHOW=true\
\
ZSH_THEME="bullet-train"/' $HOME/.zshrc
  printf "\r[3/7] ${NAILS} Theme: ${GREEN}${CHECK} installed${RESETALL}${CLEARLINE}\n"
fi

# 4. Plugins
printf "[4/7] ${SPARKLES} Installing Plugins [${B1}${B1}${B1}${B1}${B0}${B0}${B0}${B0}] "
zsh_custom_plugin 'zsh-autosuggestions'
zsh_custom_plugin 'zsh-completions'
zsh_custom_plugin 'zsh-syntax-highlighting'
printf "\r[4/7] ${SPARKLES} Plugins: ${GREEN}${CHECK} installed${RESETALL}${CLEARLINE}\n"

# 5. Homebrew
printf "[5/7] ${BEERS} Installing Homebrew (press <Enter>) [${B1}${B1}${B1}${B1}${B1}${B0}${B0}${B0}]"
if command -v brew >/dev/null; then
	printf "\r[5/7] ${BEERS} Homebrew: ${DIM}already installed${RESETALL}${CLEARLINE}\n"
else
  /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install.sh)" >/dev/null
  export PATH="/usr/local/bin:$PATH"
	printf "\r[5/7] ${BEERS} Homebrew: ${GREEN}${CHECK} installed${RESETALL}${CLEARLINE}\n"
fi

# 6. Git (use latest Homebrew version; not system version)
printf "[6/7] ${ROBOT} Installing Git [${B1}${B1}${B1}${B1}${B1}${B1}${B0}${B0}]"
if brew ls --versions git >/dev/null; then
	printf "\r[6/7] ${ROBOT} Git: ${DIM}already installed${RESETALL}${CLEARLINE}\n"
else
  brew install git >/dev/null
  append_to_zshrc '# Git'
  append_to_zshrc 'export GIT_TERMINAL_PROMPT=1' 1
	printf "\r[6/7] ${BEERS} Git: ${GREEN}${CHECK} installed${RESETALL}${CLEARLINE}\n"
fi

# 7. fnm
printf "[7/7] ${TREX} Installing fnm [${B1}${B1}${B1}${B1}${B1}${B1}${B1}${B0}]"
append_to_zshrc '# fnm'
append_to_zshrc 'eval "$(fnm env)"' 1
if command -v fnm >/dev/null; then
	printf "\r[7/7] ${TREX} fnm: ${DIM}already installed${RESETALL}${CLEARLINE}\n"
else
  brew install fnm >/dev/null
	printf "\r[7/7] ${TREX} fnm: ${GREEN}${CHECK} installed${RESETALL}${CLEARLINE}\n"
fi

# 8. Finish
append_to_zshrc '# Aliases'
append_to_zshrc "alias gcb='git checkout -b '" 1
append_to_zshrc "alias gcm='git checkout main'" 1
append_to_zshrc "alias gf='git fetch'" 1
append_to_zshrc "alias gl='git pull --rebase'" 1
append_to_zshrc "alias gpf='git push --force --force-with-lease'" 1
append_to_zshrc "alias gpo='git remote prune origin'" 1
append_to_zshrc "alias grc='git rebase --continue'" 1
append_to_zshrc "alias grh='git reset --hard HEAD'" 1
append_to_zshrc "alias grm='git rebase -i origin/main'" 1
append_to_zshrc "alias grs='git rebase --skip'" 1
append_to_zshrc "alias gs='git status'" 1
ELAPSED_TIME=$(($SECONDS - $START_TIME))
printf "${GREEN}${BOLD}${CHECK} Done${RESETALL} in $(($ELAPSED_TIME))s.\n"
printf "\n${YELLOW}${BOLD}Change your terminal font to “Perplexed Normal” for icons to work${RESETALL}\n"
printf "\n${REFRESH} ${BOLD}Restart your terminal for settings to take effect.${RESETALL}\n"
printf "\nHappy surfing!\n"
